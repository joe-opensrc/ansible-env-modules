---
# tasks file for module
- name: Create dirs
  become: yes
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    owner: "{{ modules_sys_user }}"
    group: "{{ modules_sys_user }}"
    mode: 0755
  loop:
    - "{{ modules_tmp_dir }}"
    - "{{ modules_download_dir }}"
    - "{{ modules_build_dir }}"
    - "{{ modules_root_prefix }}"

# - name: Fetch Modules
#   ansible.builtin.get_url:
#     url: "{{ modules_download_url }}"
#     dest: "{{ modules_download_dir }}/"
#     owner: "{{ modules_sys_user }}"
#     mode: 0750

# - name: Info¦ modules_download_url
#   ansible.builtin.debug:
#     msg: "{{ modules_download_url }}"

- name: Fetch and Extract modules release binaries
  register: binaries_extracted
  ansible.builtin.unarchive:
    remote_src: true
    list_files: yes
    owner: "{{ modules_sys_user }}"
    group: "{{ modules_sys_user }}"
    src:  "{{ modules_download_url }}"
    dest: "{{ modules_build_dir }}/"

- name: Info¦ extracted binaries?
  ansible.builtin.debug:
    msg: "{{ binaries_extracted }}"

- name: Build¦ configure modules src
  ansible.builtin.command: "./configure --prefix {{ modules_root_prefix }}/modules --enable-versioning --enable-set-shell-startup --enable-quarantine-support" 
  args:
    chdir: "{{ modules_build_dir }}/{{ binaries_extracted.files[0] }}"
#"{{ modules_build_dir }}/"
    creates: "lib/config.log"

- name: Build¦ make modules 
  ansible.builtin.command: "make -j4"
  args:
    chdir: "{{ modules_build_dir }}/{{ binaries_extracted.files[0] }}"


- name: Build¦ install modules 
  become: yes
  ansible.builtin.command: "make install"
  args:
    chdir: "{{ modules_build_dir }}/{{ binaries_extracted.files[0] }}"


